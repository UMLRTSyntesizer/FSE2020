/**
 * generated by Xtext 2.19.0
 */
package umlrtsyntesizer.constLang.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import umlrtsyntesizer.constLang.Attribute;
import umlrtsyntesizer.constLang.ConstLangPackage;
import umlrtsyntesizer.constLang.Expression;
import umlrtsyntesizer.constLang.MessageConstraint;
import umlrtsyntesizer.constLang.WhereToApplyEnum;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Message Constraint</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link umlrtsyntesizer.constLang.impl.MessageConstraintImpl#getName <em>Name</em>}</li>
 *   <li>{@link umlrtsyntesizer.constLang.impl.MessageConstraintImpl#getParams <em>Params</em>}</li>
 *   <li>{@link umlrtsyntesizer.constLang.impl.MessageConstraintImpl#getWhereToApply <em>Where To Apply</em>}</li>
 *   <li>{@link umlrtsyntesizer.constLang.impl.MessageConstraintImpl#getPreConstraints <em>Pre Constraints</em>}</li>
 *   <li>{@link umlrtsyntesizer.constLang.impl.MessageConstraintImpl#getPostConstraints <em>Post Constraints</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MessageConstraintImpl extends MinimalEObjectImpl.Container implements MessageConstraint
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParams() <em>Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParams()
   * @generated
   * @ordered
   */
  protected EList<Attribute> params;

  /**
   * The default value of the '{@link #getWhereToApply() <em>Where To Apply</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhereToApply()
   * @generated
   * @ordered
   */
  protected static final WhereToApplyEnum WHERE_TO_APPLY_EDEFAULT = WhereToApplyEnum.SERVER;

  /**
   * The cached value of the '{@link #getWhereToApply() <em>Where To Apply</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhereToApply()
   * @generated
   * @ordered
   */
  protected WhereToApplyEnum whereToApply = WHERE_TO_APPLY_EDEFAULT;

  /**
   * The cached value of the '{@link #getPreConstraints() <em>Pre Constraints</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPreConstraints()
   * @generated
   * @ordered
   */
  protected Expression preConstraints;

  /**
   * The cached value of the '{@link #getPostConstraints() <em>Post Constraints</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPostConstraints()
   * @generated
   * @ordered
   */
  protected Expression postConstraints;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MessageConstraintImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ConstLangPackage.Literals.MESSAGE_CONSTRAINT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConstLangPackage.MESSAGE_CONSTRAINT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Attribute> getParams()
  {
    if (params == null)
    {
      params = new EObjectContainmentEList<Attribute>(Attribute.class, this, ConstLangPackage.MESSAGE_CONSTRAINT__PARAMS);
    }
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WhereToApplyEnum getWhereToApply()
  {
    return whereToApply;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWhereToApply(WhereToApplyEnum newWhereToApply)
  {
    WhereToApplyEnum oldWhereToApply = whereToApply;
    whereToApply = newWhereToApply == null ? WHERE_TO_APPLY_EDEFAULT : newWhereToApply;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConstLangPackage.MESSAGE_CONSTRAINT__WHERE_TO_APPLY, oldWhereToApply, whereToApply));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getPreConstraints()
  {
    return preConstraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPreConstraints(Expression newPreConstraints, NotificationChain msgs)
  {
    Expression oldPreConstraints = preConstraints;
    preConstraints = newPreConstraints;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS, oldPreConstraints, newPreConstraints);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPreConstraints(Expression newPreConstraints)
  {
    if (newPreConstraints != preConstraints)
    {
      NotificationChain msgs = null;
      if (preConstraints != null)
        msgs = ((InternalEObject)preConstraints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS, null, msgs);
      if (newPreConstraints != null)
        msgs = ((InternalEObject)newPreConstraints).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS, null, msgs);
      msgs = basicSetPreConstraints(newPreConstraints, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS, newPreConstraints, newPreConstraints));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getPostConstraints()
  {
    return postConstraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPostConstraints(Expression newPostConstraints, NotificationChain msgs)
  {
    Expression oldPostConstraints = postConstraints;
    postConstraints = newPostConstraints;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS, oldPostConstraints, newPostConstraints);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPostConstraints(Expression newPostConstraints)
  {
    if (newPostConstraints != postConstraints)
    {
      NotificationChain msgs = null;
      if (postConstraints != null)
        msgs = ((InternalEObject)postConstraints).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS, null, msgs);
      if (newPostConstraints != null)
        msgs = ((InternalEObject)newPostConstraints).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS, null, msgs);
      msgs = basicSetPostConstraints(newPostConstraints, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS, newPostConstraints, newPostConstraints));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ConstLangPackage.MESSAGE_CONSTRAINT__PARAMS:
        return ((InternalEList<?>)getParams()).basicRemove(otherEnd, msgs);
      case ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS:
        return basicSetPreConstraints(null, msgs);
      case ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS:
        return basicSetPostConstraints(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ConstLangPackage.MESSAGE_CONSTRAINT__NAME:
        return getName();
      case ConstLangPackage.MESSAGE_CONSTRAINT__PARAMS:
        return getParams();
      case ConstLangPackage.MESSAGE_CONSTRAINT__WHERE_TO_APPLY:
        return getWhereToApply();
      case ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS:
        return getPreConstraints();
      case ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS:
        return getPostConstraints();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ConstLangPackage.MESSAGE_CONSTRAINT__NAME:
        setName((String)newValue);
        return;
      case ConstLangPackage.MESSAGE_CONSTRAINT__PARAMS:
        getParams().clear();
        getParams().addAll((Collection<? extends Attribute>)newValue);
        return;
      case ConstLangPackage.MESSAGE_CONSTRAINT__WHERE_TO_APPLY:
        setWhereToApply((WhereToApplyEnum)newValue);
        return;
      case ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS:
        setPreConstraints((Expression)newValue);
        return;
      case ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS:
        setPostConstraints((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ConstLangPackage.MESSAGE_CONSTRAINT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ConstLangPackage.MESSAGE_CONSTRAINT__PARAMS:
        getParams().clear();
        return;
      case ConstLangPackage.MESSAGE_CONSTRAINT__WHERE_TO_APPLY:
        setWhereToApply(WHERE_TO_APPLY_EDEFAULT);
        return;
      case ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS:
        setPreConstraints((Expression)null);
        return;
      case ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS:
        setPostConstraints((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ConstLangPackage.MESSAGE_CONSTRAINT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ConstLangPackage.MESSAGE_CONSTRAINT__PARAMS:
        return params != null && !params.isEmpty();
      case ConstLangPackage.MESSAGE_CONSTRAINT__WHERE_TO_APPLY:
        return whereToApply != WHERE_TO_APPLY_EDEFAULT;
      case ConstLangPackage.MESSAGE_CONSTRAINT__PRE_CONSTRAINTS:
        return preConstraints != null;
      case ConstLangPackage.MESSAGE_CONSTRAINT__POST_CONSTRAINTS:
        return postConstraints != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", WhereToApply: ");
    result.append(whereToApply);
    result.append(')');
    return result.toString();
  }

} //MessageConstraintImpl
