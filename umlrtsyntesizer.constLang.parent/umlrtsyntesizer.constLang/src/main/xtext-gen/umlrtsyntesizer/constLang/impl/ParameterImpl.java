/**
 * generated by Xtext 2.19.0
 */
package umlrtsyntesizer.constLang.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import umlrtsyntesizer.constLang.ConstLangPackage;
import umlrtsyntesizer.constLang.Param;
import umlrtsyntesizer.constLang.Parameter;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parameter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link umlrtsyntesizer.constLang.impl.ParameterImpl#getParamname <em>Paramname</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParameterImpl extends MinimalEObjectImpl.Container implements Parameter
{
  /**
   * The cached value of the '{@link #getParamname() <em>Paramname</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamname()
   * @generated
   * @ordered
   */
  protected Param paramname;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParameterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ConstLangPackage.Literals.PARAMETER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Param getParamname()
  {
    if (paramname != null && paramname.eIsProxy())
    {
      InternalEObject oldParamname = (InternalEObject)paramname;
      paramname = (Param)eResolveProxy(oldParamname);
      if (paramname != oldParamname)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ConstLangPackage.PARAMETER__PARAMNAME, oldParamname, paramname));
      }
    }
    return paramname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Param basicGetParamname()
  {
    return paramname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParamname(Param newParamname)
  {
    Param oldParamname = paramname;
    paramname = newParamname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConstLangPackage.PARAMETER__PARAMNAME, oldParamname, paramname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ConstLangPackage.PARAMETER__PARAMNAME:
        if (resolve) return getParamname();
        return basicGetParamname();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ConstLangPackage.PARAMETER__PARAMNAME:
        setParamname((Param)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ConstLangPackage.PARAMETER__PARAMNAME:
        setParamname((Param)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ConstLangPackage.PARAMETER__PARAMNAME:
        return paramname != null;
    }
    return super.eIsSet(featureID);
  }

} //ParameterImpl
