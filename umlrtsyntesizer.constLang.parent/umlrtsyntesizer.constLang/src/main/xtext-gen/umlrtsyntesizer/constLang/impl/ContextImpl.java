/**
 * generated by Xtext 2.19.0
 */
package umlrtsyntesizer.constLang.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import umlrtsyntesizer.constLang.Attribute;
import umlrtsyntesizer.constLang.ConstLangPackage;
import umlrtsyntesizer.constLang.Context;
import umlrtsyntesizer.constLang.Init;
import umlrtsyntesizer.constLang.MessageConstraint;
import umlrtsyntesizer.constLang.SystemInvariant;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Context</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link umlrtsyntesizer.constLang.impl.ContextImpl#getName <em>Name</em>}</li>
 *   <li>{@link umlrtsyntesizer.constLang.impl.ContextImpl#getAttributes <em>Attributes</em>}</li>
 *   <li>{@link umlrtsyntesizer.constLang.impl.ContextImpl#getInit <em>Init</em>}</li>
 *   <li>{@link umlrtsyntesizer.constLang.impl.ContextImpl#getSystemInvariants <em>System Invariants</em>}</li>
 *   <li>{@link umlrtsyntesizer.constLang.impl.ContextImpl#getMessageConstraints <em>Message Constraints</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContextImpl extends MinimalEObjectImpl.Container implements Context
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAttributes() <em>Attributes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributes()
   * @generated
   * @ordered
   */
  protected EList<Attribute> attributes;

  /**
   * The cached value of the '{@link #getInit() <em>Init</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInit()
   * @generated
   * @ordered
   */
  protected Init init;

  /**
   * The cached value of the '{@link #getSystemInvariants() <em>System Invariants</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSystemInvariants()
   * @generated
   * @ordered
   */
  protected EList<SystemInvariant> systemInvariants;

  /**
   * The cached value of the '{@link #getMessageConstraints() <em>Message Constraints</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMessageConstraints()
   * @generated
   * @ordered
   */
  protected EList<MessageConstraint> messageConstraints;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContextImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ConstLangPackage.Literals.CONTEXT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConstLangPackage.CONTEXT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Attribute> getAttributes()
  {
    if (attributes == null)
    {
      attributes = new EObjectContainmentEList<Attribute>(Attribute.class, this, ConstLangPackage.CONTEXT__ATTRIBUTES);
    }
    return attributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Init getInit()
  {
    return init;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInit(Init newInit, NotificationChain msgs)
  {
    Init oldInit = init;
    init = newInit;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ConstLangPackage.CONTEXT__INIT, oldInit, newInit);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInit(Init newInit)
  {
    if (newInit != init)
    {
      NotificationChain msgs = null;
      if (init != null)
        msgs = ((InternalEObject)init).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ConstLangPackage.CONTEXT__INIT, null, msgs);
      if (newInit != null)
        msgs = ((InternalEObject)newInit).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ConstLangPackage.CONTEXT__INIT, null, msgs);
      msgs = basicSetInit(newInit, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConstLangPackage.CONTEXT__INIT, newInit, newInit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<SystemInvariant> getSystemInvariants()
  {
    if (systemInvariants == null)
    {
      systemInvariants = new EObjectContainmentEList<SystemInvariant>(SystemInvariant.class, this, ConstLangPackage.CONTEXT__SYSTEM_INVARIANTS);
    }
    return systemInvariants;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<MessageConstraint> getMessageConstraints()
  {
    if (messageConstraints == null)
    {
      messageConstraints = new EObjectContainmentEList<MessageConstraint>(MessageConstraint.class, this, ConstLangPackage.CONTEXT__MESSAGE_CONSTRAINTS);
    }
    return messageConstraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ConstLangPackage.CONTEXT__ATTRIBUTES:
        return ((InternalEList<?>)getAttributes()).basicRemove(otherEnd, msgs);
      case ConstLangPackage.CONTEXT__INIT:
        return basicSetInit(null, msgs);
      case ConstLangPackage.CONTEXT__SYSTEM_INVARIANTS:
        return ((InternalEList<?>)getSystemInvariants()).basicRemove(otherEnd, msgs);
      case ConstLangPackage.CONTEXT__MESSAGE_CONSTRAINTS:
        return ((InternalEList<?>)getMessageConstraints()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ConstLangPackage.CONTEXT__NAME:
        return getName();
      case ConstLangPackage.CONTEXT__ATTRIBUTES:
        return getAttributes();
      case ConstLangPackage.CONTEXT__INIT:
        return getInit();
      case ConstLangPackage.CONTEXT__SYSTEM_INVARIANTS:
        return getSystemInvariants();
      case ConstLangPackage.CONTEXT__MESSAGE_CONSTRAINTS:
        return getMessageConstraints();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ConstLangPackage.CONTEXT__NAME:
        setName((String)newValue);
        return;
      case ConstLangPackage.CONTEXT__ATTRIBUTES:
        getAttributes().clear();
        getAttributes().addAll((Collection<? extends Attribute>)newValue);
        return;
      case ConstLangPackage.CONTEXT__INIT:
        setInit((Init)newValue);
        return;
      case ConstLangPackage.CONTEXT__SYSTEM_INVARIANTS:
        getSystemInvariants().clear();
        getSystemInvariants().addAll((Collection<? extends SystemInvariant>)newValue);
        return;
      case ConstLangPackage.CONTEXT__MESSAGE_CONSTRAINTS:
        getMessageConstraints().clear();
        getMessageConstraints().addAll((Collection<? extends MessageConstraint>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ConstLangPackage.CONTEXT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ConstLangPackage.CONTEXT__ATTRIBUTES:
        getAttributes().clear();
        return;
      case ConstLangPackage.CONTEXT__INIT:
        setInit((Init)null);
        return;
      case ConstLangPackage.CONTEXT__SYSTEM_INVARIANTS:
        getSystemInvariants().clear();
        return;
      case ConstLangPackage.CONTEXT__MESSAGE_CONSTRAINTS:
        getMessageConstraints().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ConstLangPackage.CONTEXT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ConstLangPackage.CONTEXT__ATTRIBUTES:
        return attributes != null && !attributes.isEmpty();
      case ConstLangPackage.CONTEXT__INIT:
        return init != null;
      case ConstLangPackage.CONTEXT__SYSTEM_INVARIANTS:
        return systemInvariants != null && !systemInvariants.isEmpty();
      case ConstLangPackage.CONTEXT__MESSAGE_CONSTRAINTS:
        return messageConstraints != null && !messageConstraints.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ContextImpl
