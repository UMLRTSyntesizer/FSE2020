Context ATM{
				isCardReading : Boolean
				isPinReading : Boolean
				isAuhorizing: Boolean
				isCashDepositing: Boolean
				isCaptuerCard:Boolean
				cardInserted:Boolean
				Init {
					isCardReading=false
					isPinReading=false
					isAuhorizing=false
					isCashDepositing=false
					isCaptuerCard=false
					cardInserted=false
				}
				
				Message cardInsertack(result1:Boolean)
					Pre: result1
					Post: isCardReading and cardInserted
					
				Message cardInsertack(result1:Boolean)
					Pre:  not result1
					Post: not cardInserted 
				
				Message ejectCardReq()
					Post: not cardInserted 
	
				Message cardReadResult(result2:Integer) 
					Pre:  (result2==0) and isCardReading 
					Post: isPinReading and  not isCardReading
				Message cardReadResult(result2:Integer) 
					Pre:  (result2==1) and isCardReading  
					Post: not cardInserted   and not isCardReading
				Message cardReadReq()
					Post: isCardReading
				
					

				Message pinReadResult(result3:Integer)
					Pre:  isPinReading and (result3==0) 
					Post: isAuhorizing and not isPinReading
				Message pinReadResult(result3:Integer)
					Pre:  isPinReading and (result3==1) 
					Post: isCaptuerCard and not isPinReading
				Message pinReadResult(result3:Integer)
					Pre:  isPinReading and (result3==2)
					Post: not cardInserted and not isPinReading
								
				Message pinReadReq()
					Post: isPinReading
				
				Message autorizateResult(result4:Integer) 
					Pre: isAuhorizing and (result4==0)
					Post: isCashDepositing and not isAuhorizing
			    Message autorizateResult(result4:Integer) 
					Pre: isAuhorizing and (result4==1)
					Post: not cardInserted and isAuhorizing
					
				Message deposited()
					Pre: isAuhorizing
					Post: not cardInserted 
					
				Message depositReq()
					
					Post: isCashDepositing
				
				Message captureCardReq()
					Post: isCaptuerCard

			}