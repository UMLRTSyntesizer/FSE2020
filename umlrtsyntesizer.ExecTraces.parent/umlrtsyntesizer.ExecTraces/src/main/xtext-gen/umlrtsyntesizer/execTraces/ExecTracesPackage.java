/**
 * generated by Xtext 2.19.0
 */
package umlrtsyntesizer.execTraces;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see umlrtsyntesizer.execTraces.ExecTracesFactory
 * @model kind="package"
 * @generated
 */
public interface ExecTracesPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "execTraces";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.ExecTraces.umlrtsyntesizer";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "execTraces";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ExecTracesPackage eINSTANCE = umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl.init();

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.impl.ExecTracesImpl <em>Exec Traces</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesImpl
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getExecTraces()
   * @generated
   */
  int EXEC_TRACES = 0;

  /**
   * The feature id for the '<em><b>Component Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXEC_TRACES__COMPONENT_NAME = 0;

  /**
   * The feature id for the '<em><b>Node</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXEC_TRACES__NODE = 1;

  /**
   * The feature id for the '<em><b>Edge</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXEC_TRACES__EDGE = 2;

  /**
   * The number of structural features of the '<em>Exec Traces</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXEC_TRACES_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.impl.EdgeImpl <em>Edge</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.impl.EdgeImpl
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getEdge()
   * @generated
   */
  int EDGE = 1;

  /**
   * The feature id for the '<em><b>Source</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EDGE__SOURCE = 0;

  /**
   * The feature id for the '<em><b>Destination</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EDGE__DESTINATION = 1;

  /**
   * The feature id for the '<em><b>Trigger</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EDGE__TRIGGER = 2;

  /**
   * The feature id for the '<em><b>Actions</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EDGE__ACTIONS = 3;

  /**
   * The feature id for the '<em><b>Status</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EDGE__STATUS = 4;

  /**
   * The feature id for the '<em><b>Guard</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EDGE__GUARD = 5;

  /**
   * The number of structural features of the '<em>Edge</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EDGE_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.impl.NodeImpl <em>Node</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.impl.NodeImpl
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getNode()
   * @generated
   */
  int NODE = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__NAME = 0;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__ID = 1;

  /**
   * The feature id for the '<em><b>Level</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__LEVEL = 2;

  /**
   * The feature id for the '<em><b>Var Data</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__VAR_DATA = 3;

  /**
   * The feature id for the '<em><b>Status</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__STATUS = 4;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__CONSTRAINTS = 5;

  /**
   * The feature id for the '<em><b>Outgoing Edges</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__OUTGOING_EDGES = 6;

  /**
   * The feature id for the '<em><b>Incoming Edges</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__INCOMING_EDGES = 7;

  /**
   * The number of structural features of the '<em>Node</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.impl.VariableImpl
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__VALUE = 1;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.impl.LiteralImpl
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 5;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.impl.RealLiteralImpl <em>Real Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.impl.RealLiteralImpl
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getRealLiteral()
   * @generated
   */
  int REAL_LITERAL = 4;

  /**
   * The feature id for the '<em><b>Int Part</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_LITERAL__INT_PART = LITERAL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Decimal Part</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_LITERAL__DECIMAL_PART = LITERAL_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Real Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.impl.IntLiteralImpl <em>Int Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.impl.IntLiteralImpl
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getIntLiteral()
   * @generated
   */
  int INT_LITERAL = 6;

  /**
   * The feature id for the '<em><b>Int</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_LITERAL__INT = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.impl.BoolLiteralImpl <em>Bool Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.impl.BoolLiteralImpl
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getBoolLiteral()
   * @generated
   */
  int BOOL_LITERAL = 7;

  /**
   * The feature id for the '<em><b>Bool</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_LITERAL__BOOL = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bool Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.StateStatus <em>State Status</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.StateStatus
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getStateStatus()
   * @generated
   */
  int STATE_STATUS = 8;

  /**
   * The meta object id for the '{@link umlrtsyntesizer.execTraces.TransStatus <em>Trans Status</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see umlrtsyntesizer.execTraces.TransStatus
   * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getTransStatus()
   * @generated
   */
  int TRANS_STATUS = 9;


  /**
   * Returns the meta object for class '{@link umlrtsyntesizer.execTraces.ExecTraces <em>Exec Traces</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exec Traces</em>'.
   * @see umlrtsyntesizer.execTraces.ExecTraces
   * @generated
   */
  EClass getExecTraces();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.ExecTraces#getComponentName <em>Component Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Component Name</em>'.
   * @see umlrtsyntesizer.execTraces.ExecTraces#getComponentName()
   * @see #getExecTraces()
   * @generated
   */
  EAttribute getExecTraces_ComponentName();

  /**
   * Returns the meta object for the containment reference list '{@link umlrtsyntesizer.execTraces.ExecTraces#getNode <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Node</em>'.
   * @see umlrtsyntesizer.execTraces.ExecTraces#getNode()
   * @see #getExecTraces()
   * @generated
   */
  EReference getExecTraces_Node();

  /**
   * Returns the meta object for the containment reference list '{@link umlrtsyntesizer.execTraces.ExecTraces#getEdge <em>Edge</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Edge</em>'.
   * @see umlrtsyntesizer.execTraces.ExecTraces#getEdge()
   * @see #getExecTraces()
   * @generated
   */
  EReference getExecTraces_Edge();

  /**
   * Returns the meta object for class '{@link umlrtsyntesizer.execTraces.Edge <em>Edge</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Edge</em>'.
   * @see umlrtsyntesizer.execTraces.Edge
   * @generated
   */
  EClass getEdge();

  /**
   * Returns the meta object for the reference '{@link umlrtsyntesizer.execTraces.Edge#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Source</em>'.
   * @see umlrtsyntesizer.execTraces.Edge#getSource()
   * @see #getEdge()
   * @generated
   */
  EReference getEdge_Source();

  /**
   * Returns the meta object for the reference '{@link umlrtsyntesizer.execTraces.Edge#getDestination <em>Destination</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Destination</em>'.
   * @see umlrtsyntesizer.execTraces.Edge#getDestination()
   * @see #getEdge()
   * @generated
   */
  EReference getEdge_Destination();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Edge#getTrigger <em>Trigger</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Trigger</em>'.
   * @see umlrtsyntesizer.execTraces.Edge#getTrigger()
   * @see #getEdge()
   * @generated
   */
  EAttribute getEdge_Trigger();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Edge#getActions <em>Actions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Actions</em>'.
   * @see umlrtsyntesizer.execTraces.Edge#getActions()
   * @see #getEdge()
   * @generated
   */
  EAttribute getEdge_Actions();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Edge#getStatus <em>Status</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Status</em>'.
   * @see umlrtsyntesizer.execTraces.Edge#getStatus()
   * @see #getEdge()
   * @generated
   */
  EAttribute getEdge_Status();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Edge#getGuard <em>Guard</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Guard</em>'.
   * @see umlrtsyntesizer.execTraces.Edge#getGuard()
   * @see #getEdge()
   * @generated
   */
  EAttribute getEdge_Guard();

  /**
   * Returns the meta object for class '{@link umlrtsyntesizer.execTraces.Node <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node</em>'.
   * @see umlrtsyntesizer.execTraces.Node
   * @generated
   */
  EClass getNode();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Node#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see umlrtsyntesizer.execTraces.Node#getName()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Name();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Node#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see umlrtsyntesizer.execTraces.Node#getId()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Id();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Node#getLevel <em>Level</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Level</em>'.
   * @see umlrtsyntesizer.execTraces.Node#getLevel()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Level();

  /**
   * Returns the meta object for the containment reference list '{@link umlrtsyntesizer.execTraces.Node#getVarData <em>Var Data</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Var Data</em>'.
   * @see umlrtsyntesizer.execTraces.Node#getVarData()
   * @see #getNode()
   * @generated
   */
  EReference getNode_VarData();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Node#getStatus <em>Status</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Status</em>'.
   * @see umlrtsyntesizer.execTraces.Node#getStatus()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Status();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Node#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Constraints</em>'.
   * @see umlrtsyntesizer.execTraces.Node#getConstraints()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Constraints();

  /**
   * Returns the meta object for the reference list '{@link umlrtsyntesizer.execTraces.Node#getOutgoingEdges <em>Outgoing Edges</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Outgoing Edges</em>'.
   * @see umlrtsyntesizer.execTraces.Node#getOutgoingEdges()
   * @see #getNode()
   * @generated
   */
  EReference getNode_OutgoingEdges();

  /**
   * Returns the meta object for the reference list '{@link umlrtsyntesizer.execTraces.Node#getIncomingEdges <em>Incoming Edges</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Incoming Edges</em>'.
   * @see umlrtsyntesizer.execTraces.Node#getIncomingEdges()
   * @see #getNode()
   * @generated
   */
  EReference getNode_IncomingEdges();

  /**
   * Returns the meta object for class '{@link umlrtsyntesizer.execTraces.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see umlrtsyntesizer.execTraces.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.Variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see umlrtsyntesizer.execTraces.Variable#getName()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Name();

  /**
   * Returns the meta object for the containment reference '{@link umlrtsyntesizer.execTraces.Variable#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see umlrtsyntesizer.execTraces.Variable#getValue()
   * @see #getVariable()
   * @generated
   */
  EReference getVariable_Value();

  /**
   * Returns the meta object for class '{@link umlrtsyntesizer.execTraces.RealLiteral <em>Real Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Real Literal</em>'.
   * @see umlrtsyntesizer.execTraces.RealLiteral
   * @generated
   */
  EClass getRealLiteral();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.RealLiteral#getIntPart <em>Int Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Int Part</em>'.
   * @see umlrtsyntesizer.execTraces.RealLiteral#getIntPart()
   * @see #getRealLiteral()
   * @generated
   */
  EAttribute getRealLiteral_IntPart();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.RealLiteral#getDecimalPart <em>Decimal Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Decimal Part</em>'.
   * @see umlrtsyntesizer.execTraces.RealLiteral#getDecimalPart()
   * @see #getRealLiteral()
   * @generated
   */
  EAttribute getRealLiteral_DecimalPart();

  /**
   * Returns the meta object for class '{@link umlrtsyntesizer.execTraces.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see umlrtsyntesizer.execTraces.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for class '{@link umlrtsyntesizer.execTraces.IntLiteral <em>Int Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Literal</em>'.
   * @see umlrtsyntesizer.execTraces.IntLiteral
   * @generated
   */
  EClass getIntLiteral();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.IntLiteral#getInt <em>Int</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Int</em>'.
   * @see umlrtsyntesizer.execTraces.IntLiteral#getInt()
   * @see #getIntLiteral()
   * @generated
   */
  EAttribute getIntLiteral_Int();

  /**
   * Returns the meta object for class '{@link umlrtsyntesizer.execTraces.BoolLiteral <em>Bool Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Literal</em>'.
   * @see umlrtsyntesizer.execTraces.BoolLiteral
   * @generated
   */
  EClass getBoolLiteral();

  /**
   * Returns the meta object for the attribute '{@link umlrtsyntesizer.execTraces.BoolLiteral#getBool <em>Bool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool</em>'.
   * @see umlrtsyntesizer.execTraces.BoolLiteral#getBool()
   * @see #getBoolLiteral()
   * @generated
   */
  EAttribute getBoolLiteral_Bool();

  /**
   * Returns the meta object for enum '{@link umlrtsyntesizer.execTraces.StateStatus <em>State Status</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>State Status</em>'.
   * @see umlrtsyntesizer.execTraces.StateStatus
   * @generated
   */
  EEnum getStateStatus();

  /**
   * Returns the meta object for enum '{@link umlrtsyntesizer.execTraces.TransStatus <em>Trans Status</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Trans Status</em>'.
   * @see umlrtsyntesizer.execTraces.TransStatus
   * @generated
   */
  EEnum getTransStatus();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  ExecTracesFactory getExecTracesFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.impl.ExecTracesImpl <em>Exec Traces</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesImpl
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getExecTraces()
     * @generated
     */
    EClass EXEC_TRACES = eINSTANCE.getExecTraces();

    /**
     * The meta object literal for the '<em><b>Component Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXEC_TRACES__COMPONENT_NAME = eINSTANCE.getExecTraces_ComponentName();

    /**
     * The meta object literal for the '<em><b>Node</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXEC_TRACES__NODE = eINSTANCE.getExecTraces_Node();

    /**
     * The meta object literal for the '<em><b>Edge</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXEC_TRACES__EDGE = eINSTANCE.getExecTraces_Edge();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.impl.EdgeImpl <em>Edge</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.impl.EdgeImpl
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getEdge()
     * @generated
     */
    EClass EDGE = eINSTANCE.getEdge();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EDGE__SOURCE = eINSTANCE.getEdge_Source();

    /**
     * The meta object literal for the '<em><b>Destination</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EDGE__DESTINATION = eINSTANCE.getEdge_Destination();

    /**
     * The meta object literal for the '<em><b>Trigger</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EDGE__TRIGGER = eINSTANCE.getEdge_Trigger();

    /**
     * The meta object literal for the '<em><b>Actions</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EDGE__ACTIONS = eINSTANCE.getEdge_Actions();

    /**
     * The meta object literal for the '<em><b>Status</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EDGE__STATUS = eINSTANCE.getEdge_Status();

    /**
     * The meta object literal for the '<em><b>Guard</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EDGE__GUARD = eINSTANCE.getEdge_Guard();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.impl.NodeImpl <em>Node</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.impl.NodeImpl
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getNode()
     * @generated
     */
    EClass NODE = eINSTANCE.getNode();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__NAME = eINSTANCE.getNode_Name();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__ID = eINSTANCE.getNode_Id();

    /**
     * The meta object literal for the '<em><b>Level</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__LEVEL = eINSTANCE.getNode_Level();

    /**
     * The meta object literal for the '<em><b>Var Data</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE__VAR_DATA = eINSTANCE.getNode_VarData();

    /**
     * The meta object literal for the '<em><b>Status</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__STATUS = eINSTANCE.getNode_Status();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__CONSTRAINTS = eINSTANCE.getNode_Constraints();

    /**
     * The meta object literal for the '<em><b>Outgoing Edges</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE__OUTGOING_EDGES = eINSTANCE.getNode_OutgoingEdges();

    /**
     * The meta object literal for the '<em><b>Incoming Edges</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE__INCOMING_EDGES = eINSTANCE.getNode_IncomingEdges();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.impl.VariableImpl
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getVariable_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__VALUE = eINSTANCE.getVariable_Value();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.impl.RealLiteralImpl <em>Real Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.impl.RealLiteralImpl
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getRealLiteral()
     * @generated
     */
    EClass REAL_LITERAL = eINSTANCE.getRealLiteral();

    /**
     * The meta object literal for the '<em><b>Int Part</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REAL_LITERAL__INT_PART = eINSTANCE.getRealLiteral_IntPart();

    /**
     * The meta object literal for the '<em><b>Decimal Part</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REAL_LITERAL__DECIMAL_PART = eINSTANCE.getRealLiteral_DecimalPart();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.impl.LiteralImpl
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.impl.IntLiteralImpl <em>Int Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.impl.IntLiteralImpl
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getIntLiteral()
     * @generated
     */
    EClass INT_LITERAL = eINSTANCE.getIntLiteral();

    /**
     * The meta object literal for the '<em><b>Int</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_LITERAL__INT = eINSTANCE.getIntLiteral_Int();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.impl.BoolLiteralImpl <em>Bool Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.impl.BoolLiteralImpl
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getBoolLiteral()
     * @generated
     */
    EClass BOOL_LITERAL = eINSTANCE.getBoolLiteral();

    /**
     * The meta object literal for the '<em><b>Bool</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_LITERAL__BOOL = eINSTANCE.getBoolLiteral_Bool();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.StateStatus <em>State Status</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.StateStatus
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getStateStatus()
     * @generated
     */
    EEnum STATE_STATUS = eINSTANCE.getStateStatus();

    /**
     * The meta object literal for the '{@link umlrtsyntesizer.execTraces.TransStatus <em>Trans Status</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see umlrtsyntesizer.execTraces.TransStatus
     * @see umlrtsyntesizer.execTraces.impl.ExecTracesPackageImpl#getTransStatus()
     * @generated
     */
    EEnum TRANS_STATUS = eINSTANCE.getTransStatus();

  }

} //ExecTracesPackage
